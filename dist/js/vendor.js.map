{"version":3,"sources":["vendor/fetch/fetch.js","vendor/es6-promise/es6-promise.js"],"names":["self","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","headers","this","map","forEach","append","Object","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","ArrayBuffer","Error","get","set","type","rejected","then","text","decode","json","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","input","options","url","credentials","mode","referrer","form","trim","split","bytes","replace","join","decodeURIComponent","xhr","head","pairs","getAllResponseHeaders","header","key","Response","bodyInit","status","ok","statusText","fetch","e","list","push","values","getAll","has","hasOwnProperty","callback","thisArg","call","keys","entries","clone","response","redirectStatuses","redirect","RangeError","location","init","responseURL","getResponseHeader","request","XMLHttpRequest","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","lib$es6$promise$utils$$objectOrFunction","x","lib$es6$promise$utils$$isFunction","lib$es6$promise$asap$$setScheduler","scheduleFn","lib$es6$promise$asap$$customSchedulerFn","lib$es6$promise$asap$$setAsap","asapFn","lib$es6$promise$asap$$asap","lib$es6$promise$asap$$useNextTick","process","nextTick","lib$es6$promise$asap$$flush","lib$es6$promise$asap$$useVertxTimer","lib$es6$promise$asap$$vertxNext","lib$es6$promise$asap$$useMutationObserver","iterations","observer","lib$es6$promise$asap$$BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","lib$es6$promise$asap$$useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","lib$es6$promise$asap$$useSetTimeout","setTimeout","i","lib$es6$promise$asap$$len","lib$es6$promise$asap$$queue","arg","lib$es6$promise$asap$$attemptVertx","r","require","vertx","runOnLoop","runOnContext","lib$es6$promise$then$$then","onFulfillment","onRejection","parent","child","constructor","lib$es6$promise$$internal$$noop","lib$es6$promise$$internal$$PROMISE_ID","lib$es6$promise$$internal$$makePromise","state","_state","arguments","lib$es6$promise$$internal$$invokeCallback","_result","lib$es6$promise$$internal$$subscribe","lib$es6$promise$promise$resolve$$resolve","object","Constructor","promise","lib$es6$promise$$internal$$resolve","lib$es6$promise$$internal$$selfFulfillment","lib$es6$promise$$internal$$cannotReturnOwn","lib$es6$promise$$internal$$getThen","lib$es6$promise$$internal$$GET_THEN_ERROR","lib$es6$promise$$internal$$tryThen","fulfillmentHandler","rejectionHandler","lib$es6$promise$$internal$$handleForeignThenable","thenable","sealed","lib$es6$promise$$internal$$fulfill","reason","lib$es6$promise$$internal$$reject","_label","lib$es6$promise$$internal$$handleOwnThenable","lib$es6$promise$$internal$$FULFILLED","lib$es6$promise$$internal$$REJECTED","lib$es6$promise$$internal$$handleMaybeThenable","maybeThenable","lib$es6$promise$then$$default","lib$es6$promise$promise$resolve$$default","lib$es6$promise$$internal$$publishRejection","_onerror","lib$es6$promise$$internal$$publish","lib$es6$promise$$internal$$PENDING","_subscribers","length","subscribers","settled","detail","lib$es6$promise$$internal$$ErrorObject","lib$es6$promise$$internal$$tryCatch","lib$es6$promise$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","lib$es6$promise$$internal$$initializePromise","resolver","lib$es6$promise$$internal$$nextId","lib$es6$promise$$internal$$id","lib$es6$promise$promise$all$$all","lib$es6$promise$enumerator$$default","lib$es6$promise$promise$race$$race","lib$es6$promise$utils$$isArray","lib$es6$promise$promise$reject$$reject","lib$es6$promise$promise$$needsResolver","lib$es6$promise$promise$$needsNew","lib$es6$promise$promise$$Promise","lib$es6$promise$enumerator$$Enumerator","_instanceConstructor","_input","_remaining","Array","_enumerate","lib$es6$promise$enumerator$$validationError","lib$es6$promise$polyfill$$polyfill","local","global","Function","P","cast","lib$es6$promise$promise$$default","lib$es6$promise$utils$$_isArray","isArray","lib$es6$promise$asap$$scheduleFlush","lib$es6$promise$asap$$browserWindow","window","lib$es6$promise$asap$$browserGlobal","MutationObserver","WebKitMutationObserver","lib$es6$promise$asap$$isNode","lib$es6$promise$asap$$isWorker","Uint8ClampedArray","importScripts","Math","random","substring","lib$es6$promise$promise$all$$default","lib$es6$promise$promise$race$$default","lib$es6$promise$promise$reject$$default","all","race","_setScheduler","_setAsap","_asap","catch","_eachEntry","entry","c","_settledAt","_willSettleAt","enumerator","lib$es6$promise$polyfill$$default","lib$es6$promise$umd$$ES6Promise","define","module"],"mappings":"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","file":"js/vendor.js","sourcesContent":["(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   3.2.2+35df15ea\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$vertxNext;\n    var lib$es6$promise$asap$$customSchedulerFn;\n\n    var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        if (lib$es6$promise$asap$$customSchedulerFn) {\n          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n        } else {\n          lib$es6$promise$asap$$scheduleFlush();\n        }\n      }\n    }\n\n    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n    }\n\n    function lib$es6$promise$asap$$setAsap(asapFn) {\n      lib$es6$promise$asap$$asap = asapFn;\n    }\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // see https://github.com/cujojs/when/issues/410 for details\n      return function() {\n        process.nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertx() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertx();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n    function lib$es6$promise$then$$then(onFulfillment, onRejection) {\n      var parent = this;\n\n      var child = new this.constructor(lib$es6$promise$$internal$$noop);\n\n      if (child[lib$es6$promise$$internal$$PROMISE_ID] === undefined) {\n        lib$es6$promise$$internal$$makePromise(child);\n      }\n\n      var state = parent._state;\n\n      if (state) {\n        var callback = arguments[state - 1];\n        lib$es6$promise$asap$$asap(function(){\n          lib$es6$promise$$internal$$invokeCallback(state, child, callback, parent._result);\n        });\n      } else {\n        lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n      }\n\n      return child;\n    }\n    var lib$es6$promise$then$$default = lib$es6$promise$then$$then;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    var lib$es6$promise$$internal$$PROMISE_ID = Math.random().toString(36).substring(16);\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFulfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$asap(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable, then) {\n      if (maybeThenable.constructor === promise.constructor &&\n          then === lib$es6$promise$then$$default &&\n          constructor.resolve === lib$es6$promise$promise$resolve$$default) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFulfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value, lib$es6$promise$$internal$$getThen(value));\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    var lib$es6$promise$$internal$$id = 0;\n    function lib$es6$promise$$internal$$nextId() {\n      return lib$es6$promise$$internal$$id++;\n    }\n\n    function lib$es6$promise$$internal$$makePromise(promise) {\n      promise[lib$es6$promise$$internal$$PROMISE_ID] = lib$es6$promise$$internal$$id++;\n      promise._state = undefined;\n      promise._result = undefined;\n      promise._subscribers = [];\n    }\n\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        return new Constructor(function(resolve, reject) {\n          reject(new TypeError('You must pass an array to race.'));\n        });\n      } else {\n        return new Constructor(function(resolve, reject) {\n          var length = entries.length;\n          for (var i = 0; i < length; i++) {\n            Constructor.resolve(entries[i]).then(resolve, reject);\n          }\n        });\n      }\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise's eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this[lib$es6$promise$$internal$$PROMISE_ID] = lib$es6$promise$$internal$$nextId();\n      this._result = this._state = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        typeof resolver !== 'function' && lib$es6$promise$promise$$needsResolver();\n        this instanceof lib$es6$promise$promise$$Promise ? lib$es6$promise$$internal$$initializePromise(this, resolver) : lib$es6$promise$promise$$needsNew();\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: lib$es6$promise$then$$default,\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      this._instanceConstructor = Constructor;\n      this.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!this.promise[lib$es6$promise$$internal$$PROMISE_ID]) {\n        lib$es6$promise$$internal$$makePromise(this.promise);\n      }\n\n      if (lib$es6$promise$utils$$isArray(input)) {\n        this._input     = input;\n        this.length     = input.length;\n        this._remaining = input.length;\n\n        this._result = new Array(this.length);\n\n        if (this.length === 0) {\n          lib$es6$promise$$internal$$fulfill(this.promise, this._result);\n        } else {\n          this.length = this.length || 0;\n          this._enumerate();\n          if (this._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(this.promise, this._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(this.promise, lib$es6$promise$enumerator$$validationError());\n      }\n    }\n\n    function lib$es6$promise$enumerator$$validationError() {\n      return new Error('Array Methods must be provided an Array');\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var length  = this.length;\n      var input   = this._input;\n\n      for (var i = 0; this._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        this._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var c = this._instanceConstructor;\n      var resolve = c.resolve;\n\n      if (resolve === lib$es6$promise$promise$resolve$$default) {\n        var then = lib$es6$promise$$internal$$getThen(entry);\n\n        if (then === lib$es6$promise$then$$default &&\n            entry._state !== lib$es6$promise$$internal$$PENDING) {\n          this._settledAt(entry._state, i, entry._result);\n        } else if (typeof then !== 'function') {\n          this._remaining--;\n          this._result[i] = entry;\n        } else if (c === lib$es6$promise$promise$$default) {\n          var promise = new c(lib$es6$promise$$internal$$noop);\n          lib$es6$promise$$internal$$handleMaybeThenable(promise, entry, then);\n          this._willSettleAt(promise, i);\n        } else {\n          this._willSettleAt(new c(function(resolve) { resolve(entry); }), i);\n        }\n      } else {\n        this._willSettleAt(resolve(entry), i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var promise = this.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        this._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          this._result[i] = value;\n        }\n      }\n\n      if (this._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, this._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n"],"sourceRoot":"/source/"}