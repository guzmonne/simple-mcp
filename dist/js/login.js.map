{"version":3,"sources":["js/login.js"],"names":["signupUrl","toggleSections","_ref","signupSection","signinSection","socialSection","toggleClass","toggleSignupButtons","_ref2","spinButton","createButton","toggleForm","el$","name","email","password","age","maleRadio","femaleRadio","disabled","hideAlerts","_ref3","mandatoryFieldsAlert","userExistsAlert","hasClass","addClass","showAlert","alert","removeClass","getUserDataFromForm","_ref4","Promise","resolve","value","JSON","parse","options","selectedIndex","gender","checked","undefined","validateData","data","notValid","Object","keys","map","key","isEmpty","reduce","acc","partial","reject","Error","signupUser","fetchLambda","method","headers","Accept","Content-Type","body","stringify","createUser","event","preventDefault","then","createUserSuccess","bind","catch","createUserError","url","console","log","window","location","href","err","error","message","main","document","ids","getElementsById","toggleSectionHandler","createUserHandler","addEventListener"],"mappings":"YAAA,IAAMA,WAAY,mFAQZC,eAAiB,SAAAC,GAAmD,GAAjDC,GAAiDD,EAAjDC,cAAeC,EAAkCF,EAAlCE,cAAeC,EAAmBH,EAAnBG,aAClDF,IAAeG,YAAYH,EAAe,UADzCC,GAAAE,YAAAF,EAAiB,UAAEC,GAAiDC,YAAjDD,EAAiD,WAK1EE,oBAAA,SAAAC,GAAA,GAAAC,GAAAD,EAAAC,WAAAC,EAAAF,EAAAE,YAOOD,IAAcH,YAAYG,EAAY,UACtCC,GAAcJ,YAAYI,EAAc,WAOzCC,WAAa,SAACC,GAAQ,GARrBC,GAAcD,EAAdC,KAAAC,EAAcF,EAAdE,MAAcC,EAAAH,EAAAG,SAAYC,EAAZJ,EAAYI,IAAAC,EAAZL,EAAYK,UAAYC,EAAxBN,EAAwBM,WACxCL,KAAEA,EAAcM,UAAYN,EAAAM,UAFjCL,IAAAA,EAAAK,UAAAL,EAAAK,UAIAJ,IAAAA,EAAAI,UAAAJ,EAAAI,UAUKH,IAAaA,EAAIG,UAAYH,EAAIG,UACjCF,IAAaA,EAAUE,UAAYF,EAAUE,UAC7CD,IAAaA,EAAYC,UAAYD,EAAYC,UACrDZ,oBAAoBK,IAQfQ,WAAa,SAAAC,GAA6C,GAA3CC,GAA2CD,EAA3CC,qBAAsBC,EAAqBF,EAArBE,eAdtCD,KAA8BE,SAAjBF,EAAA,WACjBG,SAAAH,EAAmC,UAC/BC,IAAsBC,SAAYD,IACtCE,SAAiBF,EAAgB,WAsB5BG,UAAY,SAACC,GAAD,MAAWC,aAAYD,EAAO,WALhDE,oBAAA,SAAAC,GAAA,GAAAjB,GAAAiB,EAAAjB,KAAAC,EAAAgB,EAAAhB,MAAAC,EAAAe,EAAAf,SAAAC,EAAAc,EAAAd,IAAAC,EAAAa,EAAAb,UAAAC,EAAAY,EAAAZ,WAAA,OAiBCa,SAAQC,SACPnB,KAAMA,EAAKoB,MACXnB,MAAOA,EAAMmB,MACblB,SAAUA,EAASkB,MAfrBjB,IAAMkB,KAAAC,MAAYnB,EAAAoB,QAAZpB,EAAYqB,eAAAJ,OAAAK,OAAWrB,EAAYsB,QAAO,OAA9BrB,EAAAqB,QAAA,SAAAC,UA0BZC,aAAe,SAACC,GACrB,GAAMC,GAAWC,OAAOC,KAAKH,GAC3BI,IAAI,SAAAC,GAAA,MAAOC,SAAQN,EAAKK,MAjB3BE,OAAM,SAAAC,EAAAC,GAAA,MAAsBD,IAAtBC,IAAA,EAAsB,OAAAR,GAAAZ,QAAAqB,OAAA,GAAQC,OAAR,uCAAAtB,QAAeC,QAAfU,IAI1BY,WAAU,SAAAZ,GAAA,MACVa,aAAUvD,WACVwD,OAAQ,OALTC,SADDC,OAAA,mBAQAC,eAAA,oBA2BEC,KAAM1B,KAAK2B,UAAUnB,MAZvBoB,WAAA,SAAAlD,EAAAmD,GA0BCA,EAAMC,iBACNrD,WAAWC,GACXQ,WAAWR,GACXiB,oBAAoBjB,GAxBrBqD,KAAM,SAAAvB,GAAA,MAAAD,cAAAC,KAAauB,KAClB,SAAAvB,GAAA,MAAAY,YAAYZ,KACXuB,KAAAC,kBADsBC,KACtB3B,OADsB5B,IAEtBwD,MAAAC,gBAASF,KAAT3B,OAAS5B,KAiCLsD,kBAAoB,SAACtD,EAAK0D,GAC/BC,QAAQC,IAAIF,GACZ3D,WAAWC,GACX6D,OAAOC,SAASC,KAAOL,GAlBvBD,gBAAA,SAAAzD,EAAAgE,GACAL,QAAAM,MAAAD,EADA,IAEArD,GAAAX,EAAAW,gBAAAD,EAAAV,EAAAU,oBACAX,YAAAC,GACe,uCAARgE,EAAQE,SADfpD,UAEOJ,GAAmB,oBAAnBsD,EAAQE,SAFfpD,UAGOH,IAWPwD,KAAW,SAAAC,EAAXP,GAFD,IAgCE,GAAMQ,IAEL,gBACA,gBACA,gBAxBF,aADqC,YA8BnC,oBA3BF,oBAGA,OAND,QASA,WA2BG,YACA,cACA,MAEA,aACA,eAxBH,uBACC,mBAECrE,EAAAsE,gBAAAD,EAAAD,GAECG,EAAAlF,eAAAkE,KAAA3B,OAAA5B,GACAwE,EACAtB,WACAK,KADA3B,OACA5B,EAEAyE,kBACAzE,EAAA,kBAPW,QAAAuE,GAQXE,iBAAAzE,EAAA,kBAAA,QAAAuE,GACAE,iBAAAzE,EAAA,WACA,WAVWwE,GAWX,MAAAR,GACAL,QACAM,MAAAD,IAaDG,MAAAC,SAAAP","file":"js/login.js","sourcesContent":["const signupUrl = 'https://kvmveb8o06.execute-api.us-east-1.amazonaws.com/dev/authentication/signup'\n/**\n * Toggles the visible section\n * @param  {Element} options.signupSection Signup section element.\n * @param  {Element} options.signinSection Login section element.\n * @param  {Element} options.socialSection Social login section element.\n * @return {Void}\n */\nconst toggleSections = ({signupSection, signinSection, socialSection}) => {\n\tif (signupSection) toggleClass(signupSection, 'hidden')\n\tif (signinSection) toggleClass(signinSection, 'hidden')\n\tif (socialSection) toggleClass(socialSection, 'hidden')\n}\n/**\n * Toggles the buttons to show a login icon.\n * @param  {Element} options.spinButton   Spin button element.\n * @param  {Element} options.createButton Create button element.\n * @return {Void}\n */\nconst toggleSignupButtons = ({spinButton, createButton}) => {\n\tif (!!spinButton)   toggleClass(spinButton, 'hidden')\n\tif (!!createButton) toggleClass(createButton, 'hidden')\n}\n/**\n * Disables or enables the form.\n * @param  {Object} el$ Object of DOM elements.\n * @return {Void}\n */\nconst toggleForm = (el$) => {\n\tconst {name, email, password, age, maleRadio, femaleRadio} = el$\n\tif (name)        name.disabled = !name.disabled\n\tif (email)       email.disabled = !email.disabled\n\tif (password)    password.disabled = !password.disabled\n\tif (age)         age.disabled = !age.disabled\n\tif (maleRadio)   maleRadio.disabled = !maleRadio.disabled\n\tif (femaleRadio) femaleRadio.disabled = !femaleRadio.disabled\n\ttoggleSignupButtons(el$)\n}\n/**\n * Hide alert boxes\n * @param  {Element} options.mandatoryFieldsAlert Mandatory fields element.\n * @param  {Element} options.userExistsAlert      User exists element.\n * @return {Void}\n */\nconst hideAlerts = ({mandatoryFieldsAlert, userExistsAlert}) => {\n\tif (!!mandatoryFieldsAlert && !hasClass(mandatoryFieldsAlert, 'hidden'))\n\t\taddClass(mandatoryFieldsAlert, 'hidden')\n\tif (!!userExistsAlert && !hasClass(userExistsAlert))\n\t\taddClass(userExistsAlert, 'hidden') \n}\n/**\n * Removes the hidden class from the alert element.\n * @param  {Element} alert Alert DOM element.\n * @return {Void}\n */\nconst showAlert = (alert) => removeClass(alert, 'hidden')\n/**\n * Gets the user data from the form.\n * @param  {Element} options.name        Name input.\n * @param  {Element} options.email       Email input.\n * @param  {Element} options.password    Password input.\n * @param  {Element} options.age         Age select.\n * @param  {Element} options.maleRadio   Male radio.\n * @param  {Element} options.femaleRadio Female radio.\n * @return {Promise}                     Resolved promise with form data.\n */\nconst getUserDataFromForm = ({name, email, password, age, maleRadio, femaleRadio}) => \n\tPromise.resolve({\n\t\tname: name.value,\n\t\temail: email.value,\n\t\tpassword: password.value,\n\t\tage: JSON.parse(age.options[age.selectedIndex].value),\n\t\tgender: !!maleRadio.checked ? 'male' : (!!femaleRadio.checked ? 'female' : undefined),\n\t})\n/**\n * Validate the user data. If one value is undefined\n * then return a Rejected promise. Else returned a \n * Resolved promise with the user data.\n * @param  {Object} data New user data.\n * @return {Promise}     Resolved or rejected promise.\n */\nconst validateData = (data) => {\n\tconst notValid = Object.keys(data)\n\t\t.map(key => isEmpty(data[key]))\n\t\t.reduce((acc, partial) => acc || partial, false)\n\treturn !!notValid ?\n\t\tPromise.reject(new Error('Todos los campos son obligatorios.')) :\n\t\tPromise.resolve(data) \n}\n/**\n * Calls the lambda function.\n * @param  {Object} data New user data.\n * @return {Promise}     Lambda call promise.\n */\nconst signupUser = (data) => \n\tfetchLambda(signupUrl, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t    'Accept': 'application/json',\n\t    'Content-Type': 'application/json'\n\t  },\n\t\tbody: JSON.stringify(data),\n\t})\n/**\n * Submit handler. It:\n * - grabs the user data from the form.\n * - validates the user data.\n * - calls the lambda function to create the user.\n * - if the call succeeds log the result.\n * - if the call fails throw an error.\n * @param  {Object} el$   List of elements of interest.\n * @param  {Object} event Event object.\n * @return {Void}\n */\nconst createUser = (el$, event) => {\n\tevent.preventDefault()\n\ttoggleForm(el$)\n\thideAlerts(el$)\n\tgetUserDataFromForm(el$)\n\t\t.then(data => validateData(data))\n\t\t.then(data => signupUser(data))\n\t\t.then(createUserSuccess.bind(this, el$))\n\t\t.catch(createUserError.bind(this, el$))\n}\n/**\n * createUser() success handler.\n * @param  {Object} el$  Object with DOM elements.\n * @param  {String} url  Welcome url.\n * @return {Void}\n */\nconst createUserSuccess = (el$, url) => {\n\tconsole.log(url)\n\ttoggleForm(el$)\n\twindow.location.href = url\n}\n/**\n * createUser() error handler.\n * @param  {Object} el$ Object with DOM elements.\n * @param  {Error}  err Error object.\n * @return {Void}\n */\nconst createUserError = (el$, err) => {\n\tconsole.error(err)\n\tconst {userExistsAlert, mandatoryFieldsAlert} = el$\n\ttoggleForm(el$)\n\tif (err.message === 'Todos los campos son obligatorios.')\n\t\tshowAlert(mandatoryFieldsAlert)\n\tif (err.message === 'email is in use')\n\t\tshowAlert(userExistsAlert)\n}\n/**\n * Main page function.\n * TODO\n * Fill this info\n * @param  {Object} document Page document object-\n * @param  {Object} window   Page window object.\n * @return {Void}\n */\nconst main = (document, window) => {\n\t// Log error\n\ttry {\n\t\t// Setup\n\t\tconst ids = [\n\t\t\t// Sections\n\t\t\t'signupSection',\n\t\t\t'signinSection',\n\t\t\t'socialSection',\n\t\t\t// Forms\n\t\t\t'signupForm',\n\t\t\t'loginForm',\n\t\t\t// Anchors\n\t\t\t'showSigninSection',\n\t\t\t'showSignupSection',\n\t\t\t// Form inputs\n\t\t\t'name',\n\t\t\t'email',\n\t\t\t'password',\n\t\t\t'maleRadio',\n\t\t\t'femaleRadio',\n\t\t\t'age',\n\t\t\t// Buttons\n\t\t\t'spinButton',\n\t\t\t'createButton',\n\t\t\t// Alerts\n\t\t\t'mandatoryFieldsAlert',\n\t\t\t'userExistsAlert',\n\t\t]\n\t\tconst el$ = getElementsById(ids, document)\n\t\t// Event Handlers\n\t\tconst toggleSectionHandler = toggleSections.bind(this, el$)\n\t\tconst createUserHandler = createUser.bind(this, el$)\n\t\t// Set event listeners\n\t\taddEventListener(el$['showSigninSection'], 'click', toggleSectionHandler)\n\t\taddEventListener(el$['showSignupSection'], 'click', toggleSectionHandler)\n\t\taddEventListener(el$['signupForm'], 'onsubmit', createUserHandler)\n\t} catch (err) {\n\t\tconsole.error(err)\n\t}\n}\n/**\n * Main page function.\n */\nmain(document, window)\n"],"sourceRoot":"/source/"}