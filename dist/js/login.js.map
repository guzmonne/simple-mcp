{"version":3,"sources":["js/login.js"],"names":["signupUrl","toggleSections","_ref","signupSection","signinSection","socialSection","toggleClass","toggleButtons","_ref2","spinButton","createButton","toggleForm","el$","name","email","password","age","maleRadio","femaleRadio","disabled","hideAlerts","_ref3","mandatoryFieldsAlert","userExistsAlert","hasClass","addClass","showAlert","alert","removeClass","getUserDataFromSignupForm","_ref4","Promise","resolve","value","JSON","parse","options","selectedIndex","gender","checked","undefined","validateData","data","notValid","Object","keys","map","key","isEmpty","reduce","acc","partial","reject","Error","signupUser","fetchLambda","method","headers","Accept","Content-Type","body","stringify","loginUser","event","preventDefault","loginForm","getElementsByClassName","input","_defineProperty","console","log","createUser","then","createUserSuccess","bind","catch","createUserError","url","window","location","href","err","error","message","main","document","ids","getElementsById","toggleSectionHandler","createUserHandler","loginUserHandler","addEventListener"],"mappings":"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","file":"js/login.js","sourcesContent":["const signupUrl = 'https://kvmveb8o06.execute-api.us-east-1.amazonaws.com/dev/authentication/signup'\n/**\n * Toggles the visible section\n * @param  {Element} options.signupSection Signup section element.\n * @param  {Element} options.signinSection Login section element.\n * @param  {Element} options.socialSection Social login section element.\n * @return {Void}\n */\nconst toggleSections = ({signupSection, signinSection, socialSection}) => {\n\tif (signupSection) toggleClass(signupSection, 'hidden')\n\tif (signinSection) toggleClass(signinSection, 'hidden')\n\tif (socialSection) toggleClass(socialSection, 'hidden')\n}\n/**\n * Toggles the buttons to show a login icon.\n * @param  {Element} options.spinButton   Spin button element.\n * @param  {Element} options.createButton Create button element.\n * @return {Void}\n */\nconst toggleButtons = ({spinButton, createButton}) => {\n\tif (!!spinButton)   toggleClass(spinButton, 'hidden')\n\tif (!!createButton) toggleClass(createButton, 'hidden')\n}\n/**\n * Disables or enables the form.\n * @param  {Object} el$ Object of DOM elements.\n * @return {Void}\n */\nconst toggleForm = (el$) => {\n\tconst {name, email, password, age, maleRadio, femaleRadio} = el$\n\tif (name)        name.disabled = !name.disabled\n\tif (email)       email.disabled = !email.disabled\n\tif (password)    password.disabled = !password.disabled\n\tif (age)         age.disabled = !age.disabled\n\tif (maleRadio)   maleRadio.disabled = !maleRadio.disabled\n\tif (femaleRadio) femaleRadio.disabled = !femaleRadio.disabled\n}\n/**\n * Hide alert boxes\n * @param  {Element} options.mandatoryFieldsAlert Mandatory fields element.\n * @param  {Element} options.userExistsAlert      User exists element.\n * @return {Void}\n */\nconst hideAlerts = ({mandatoryFieldsAlert, userExistsAlert}) => {\n\tif (!!mandatoryFieldsAlert && !hasClass(mandatoryFieldsAlert, 'hidden'))\n\t\taddClass(mandatoryFieldsAlert, 'hidden')\n\tif (!!userExistsAlert && !hasClass(userExistsAlert))\n\t\taddClass(userExistsAlert, 'hidden') \n}\n/**\n * Removes the hidden class from the alert element.\n * @param  {Element} alert Alert DOM element.\n * @return {Void}\n */\nconst showAlert = (alert) => removeClass(alert, 'hidden')\n/**\n * Gets the user data from the form.\n * @param  {Element} options.name        Name input.\n * @param  {Element} options.email       Email input.\n * @param  {Element} options.password    Password input.\n * @param  {Element} options.age         Age select.\n * @param  {Element} options.maleRadio   Male radio.\n * @param  {Element} options.femaleRadio Female radio.\n * @return {Promise}                     Resolved promise with form data.\n */\nconst getUserDataFromSignupForm = ({name, email, password, age, maleRadio, femaleRadio}) => \n\tPromise.resolve({\n\t\tname: name.value,\n\t\temail: email.value,\n\t\tpassword: password.value,\n\t\tage: JSON.parse(age.options[age.selectedIndex].value),\n\t\tgender: !!maleRadio.checked ? 'male' : (!!femaleRadio.checked ? 'female' : undefined),\n\t})\n/**\n * Validate the user data. If one value is undefined\n * then return a Rejected promise. Else returned a \n * Resolved promise with the user data.\n * @param  {Object} data New user data.\n * @return {Promise}     Resolved or rejected promise.\n */\nconst validateData = (data) => {\n\tconst notValid = Object.keys(data)\n\t\t.map(key => isEmpty(data[key]))\n\t\t.reduce((acc, partial) => acc || partial, false)\n\treturn !!notValid ?\n\t\tPromise.reject(new Error('Todos los campos son obligatorios.')) :\n\t\tPromise.resolve(data) \n}\n/**\n * Calls the lambda function.\n * @param  {Object} data New user data.\n * @return {Promise}     Lambda call promise.\n */\nconst signupUser = (data) => \n\tfetchLambda(signupUrl, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t    'Accept': 'application/json',\n\t    'Content-Type': 'application/json'\n\t  },\n\t\tbody: JSON.stringify(data),\n\t})\n\nconst loginUser = (el$, event) => {\n\tevent.preventDefault()\n\ttoggleButtons(el$)\n\tconst {loginForm} = el$\n\tconst data = map(loginForm.getElementsByClassName('form-control'), input => \n\t\t({[input.name]: input.value})\n\t)\n\tconsole.log(data)\n}\n/**\n * Submit handler. It:\n * - grabs the user data from the form.\n * - validates the user data.\n * - calls the lambda function to create the user.\n * - if the call succeeds log the result.\n * - if the call fails throw an error.\n * @param  {Object} el$   List of elements of interest.\n * @param  {Object} event Event object.\n * @return {Void}\n */\nconst createUser = (el$, event) => {\n\tevent.preventDefault()\n\ttoggleButtons(el$)\n\ttoggleForm(el$)\n\thideAlerts(el$)\n\tgetUserDataFromSignupForm(el$)\n\t\t.then(data => validateData(data))\n\t\t.then(data => signupUser(data))\n\t\t.then(createUserSuccess.bind(this, el$))\n\t\t.catch(createUserError.bind(this, el$))\n}\n/**\n * createUser() success handler.\n * @param  {Object} el$  Object with DOM elements.\n * @param  {String} url  Welcome url.\n * @return {Void}\n */\nconst createUserSuccess = (el$, url) => {\n\tconsole.log(url)\n\ttoggleForm(el$)\n\twindow.location.href = url\n}\n/**\n * createUser() error handler.\n * @param  {Object} el$ Object with DOM elements.\n * @param  {Error}  err Error object.\n * @return {Void}\n */\nconst createUserError = (el$, err) => {\n\tconsole.error(err)\n\tconst {userExistsAlert, mandatoryFieldsAlert} = el$\n\ttoggleForm(el$)\n\tif (err.message === 'Todos los campos son obligatorios.')\n\t\tshowAlert(mandatoryFieldsAlert)\n\tif (err.message === 'email is in use')\n\t\tshowAlert(userExistsAlert)\n}\n/**\n * Main page function.\n * TODO\n * Fill this info\n * @param  {Object} document Page document object-\n * @param  {Object} window   Page window object.\n * @return {Void}\n */\nconst main = (document, window) => {\n\t// Log error\n\ttry {\n\t\t// Setup\n\t\tconst ids = [\n\t\t\t// Sections\n\t\t\t'signupSection',\n\t\t\t'signinSection',\n\t\t\t'socialSection',\n\t\t\t// Forms\n\t\t\t'signupForm',\n\t\t\t'loginForm',\n\t\t\t// Anchors\n\t\t\t'showSigninSection',\n\t\t\t'showSignupSection',\n\t\t\t// Form inputs\n\t\t\t'name',\n\t\t\t'email',\n\t\t\t'password',\n\t\t\t'maleRadio',\n\t\t\t'femaleRadio',\n\t\t\t'age',\n\t\t\t// Buttons\n\t\t\t'spinButton',\n\t\t\t'createButton',\n\t\t\t// Alerts\n\t\t\t'mandatoryFieldsAlert',\n\t\t\t'userExistsAlert',\n\t\t]\n\t\tconst el$ = getElementsById(ids, document)\n\t\t// Event Handlers\n\t\tconst toggleSectionHandler = toggleSections.bind(this, el$)\n\t\tconst createUserHandler = createUser.bind(this, el$)\n\t\tconst loginUserHandler = loginUser.bind(this, el$)\n\t\t// Set event listeners\n\t\taddEventListener(el$['showSigninSection'], 'click', toggleSectionHandler)\n\t\taddEventListener(el$['showSignupSection'], 'click', toggleSectionHandler)\n\t\taddEventListener(el$['signupForm'], 'onsubmit', createUserHandler)\n\t\taddEventListener(el$['loginForm'], 'onsubmit', loginUserHandler)\n\t} catch (err) {\n\t\tconsole.error(err)\n\t}\n}\n/**\n * Main page function.\n */\nmain(document, window)\n"],"sourceRoot":"/source/"}