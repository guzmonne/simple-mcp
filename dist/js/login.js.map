{"version":3,"sources":["js/login.js"],"names":["signupUrl","toggleForms","_ref","signupForm","loginForm","socialIcons","toggleClass","getUserDataFromForm","_ref2","name","email","password","age","maleRadio","femaleRadio","Promise","resolve","value","JSON","parse","options","selectedIndex","gender","checked","undefined","validateData","data","console","log","createUser","el$","event","preventDefault","then","signupUser","json","catch","err","error","fetchLambda","method","headers","Accept","Content-Type","body","stringify","main","document","window","ids","getElementsById","toggleFormsHandler","bind","createUserHandler","addEventListener"],"mappings":"YAAA,IAAMA,WAAY,mFAOZC,YAAc,SAAAC,GAA0C,GAAxCC,GAAwCD,EAAxCC,WAAYC,EAA4BF,EAA5BE,UAAWC,EAAiBH,EAAjBG,WACtCF,IAAYG,YAAYH,EAAY,UADrCC,GAAcE,YAAdF,EAAc,UAAEA,GAAwCE,YAAxCD,EAAwC,WAMxDE,oBAAsB,SAAAC,GAAA,GAAEC,GAAFD,EAAEC,KAAMC,EAARF,EAAQE,MAAOC,EAAfH,EAAeG,SAAUC,EAAzBJ,EAAyBI,IAAKC,EAA9BL,EAA8BK,UAAWC,EAAzCN,EAAyCM,WAAzC,OAA0DC,SAAQC,SAL7FP,KAAMA,EAAAQ,MACNP,MAAMA,EAAAO,MACNN,SAAMA,EAAYM,MAHnBL,IAAAM,KAAAC,MAAAP,EAAAQ,QAAAR,EAAAS,eAAAJ,OAWCK,OAAUT,EAAUU,QAAU,OAAYT,EAAYS,QAAU,SAAWC,UALxCC,aAAA,SAAAC,GAAR,MAAAC,SAAeC,IAAfF,GAAAX,QAAAC,QAAAU,IAAAG,WAAkE,SAAAC,EAAQC,GACrGA,EAAAC,iBACAzB,oBAFqGuB,GAGrGG,KAAA,SAAAP,GAAA,MAAUD,cAH2FC,KAIrGO,KAAK,SAAAP,GAAA,MAAKQ,YAAUR,KACpBO,KAAA,SAAAE,GAAA,MAAUR,SAAUC,IAAAO,KALOC,MAAA,SAAAC,GAAA,MAAAV,SAAAW,MAAAD,MAQtBH,WAAe,SAAAR,GAAA,MACpBa,aAAYvC,WACZwC,OAAO,OAFRC,SAkBKC,OAAU,mBAbTC,eAAa,oBAElBC,KAAA1B,KAAA2B,UAAoBnB,MAwBfoB,KAAO,SAACC,EAAUC,GAjBL,IAGjB,GAAAC,IACG,aACA,YAJmB,cAMtB,gBAPiB,iBAAnB,aASA,OAoBG,QACA,WACA,YACA,cACA,OAEKnB,EAAMoB,gBAAgBD,EAAKF,GAjBlCI,EAAAlD,YAAAmD,KAAA5B,OAAAM,GACIuB,EAAAxB,WAAAuB,KAAA5B,OAAAM,EAEHwB,kBACCxB,EAAA,cAEA,QAAAqB,GAWDG,iBAAYxB,EAAA,eAAZ,QAAAqB,GACAG,iBAAAxB,EAAA,WAAA,WAAAuB,GACA,MAAMhB,GACNV,QAAMW,MAAAD,IAMNS,MAAAC,SAAAC","file":"js/login.js","sourcesContent":["const signupUrl = 'https://kvmveb8o06.execute-api.us-east-1.amazonaws.com/dev/authentication/signup'\n/**\n * Toggles the visible form\n * @param  {Element} options.signupForm Signup form element.\n * @param  {Element} options.loginForm  Login form element.\n * @return {Void}\n */\nconst toggleForms = ({signupForm, loginForm, socialIcons}) => {\n\tif (!!signupForm) toggleClass(signupForm, 'hidden')\n\tif (!!loginForm)  toggleClass(loginForm, 'hidden')\n\tif (!!loginForm)  toggleClass(socialIcons, 'hidden')\n}\n\nconst getUserDataFromForm = ({name, email, password, age, maleRadio, femaleRadio}) => Promise.resolve({\n\tname: name.value,\n\temail: email.value,\n\tpassword: password.value,\n\tage: JSON.parse(age.options[age.selectedIndex].value),\n\tgender: !!maleRadio.checked ? 'male' : (!!femaleRadio.checked ? 'female' : undefined),\n})\n\nconst validateData = (data) => {\n\tconsole.log(data)\n\treturn Promise.resolve(data)\n}\n\nconst createUser = (el$, event) => {\n\tevent.preventDefault()\n\tgetUserDataFromForm(el$)\n\t\t.then(data => validateData(data))\n\t\t.then(data => signupUser(data))\n\t\t.then(json => console.log(json))\n\t\t.catch(err => console.error(err))\n}\n\nconst signupUser = (data) => \n\tfetchLambda(signupUrl, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t    'Accept': 'application/json',\n\t    'Content-Type': 'application/json'\n\t  },\n\t\tbody: JSON.stringify(data),\n\t})\n/**\n * Main page function.\n * TODO\n * Fill this info\n * @param  {Object} document Page document object-\n * @param  {Object} window   Page window object.\n * @return {Void}\n */\nconst main = (document, window) => {\n\t// Log error\n\ttry {\n\t\t// Setup\n\t\tconst ids = [\n\t\t\t'signupForm',\n\t\t\t'loginForm',\n\t\t\t'socialIcons',\n\t\t\t'showLoginForm',\n\t\t\t'showSignupForm',\n\t\t\t'signupForm',\n\t\t\t'name',\n\t\t\t'email',\n\t\t\t'password',\n\t\t\t'maleRadio',\n\t\t\t'femaleRadio',\n\t\t\t'age',\n\t\t]\n\t\tconst el$ = getElementsById(ids, document)\n\t\t// Event Handlers\n\t\tconst toggleFormsHandler = toggleForms.bind(this, el$)\n\t\tconst createUserHandler = createUser.bind(this, el$)\n\t\t// Set event listeners\n\t\taddEventListener(el$['showLoginForm'], 'click', toggleFormsHandler)\n\t\taddEventListener(el$['showSignupForm'], 'click', toggleFormsHandler)\n\t\taddEventListener(el$['signupForm'], 'onsubmit', createUserHandler)\n\t} catch (err) {\n\t\tconsole.error(err)\n\t}\n}\n/**\n * Main page function.\n */\nmain(document, window)\n"],"sourceRoot":"/source/"}